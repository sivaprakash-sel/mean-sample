import { ElementRef, EventEmitter, OnInit } from '@angular/core';
import { Ng2SortableService } from '../services/ng2-drag-drop.service';
export declare class Sortable implements OnInit {
    protected el: ElementRef;
    private ng2SortableService;
    /**
     * Index of the item in the list.
     */
    sortIndex: any;
    /**
     * The drag item that can be sorted
     */
    sortItem: any;
    /**
     * The selector that defines the drag Handle.
     * If defined drag will only be allowed if dragged from the selector element.
     */
    dragHandle: string;
    /**
     * CSS class applied on the draggable that is applied when the item is being dragged.
     */
    dragClass: string;
    /**
     * CSS class that is applied when an item is being dragged over this sortable.
     */
    dragOverClass: string;
    /**
     * The CSS class applied to a draggable element. If a dragHandle is defined then its applied to that handle
     * element only. By default it is used to change the mouse over pointer.
     */
    dragHandleClass: string;
    /**
     * Defines if drag is enabled. `true` by default.
     */
    dragEnabled: boolean;
    /**
     * Event fired when Drag is started
     */
    onDragStart: EventEmitter<any>;
    /**
     * Event fired while the element is being dragged
     */
    onDrag: EventEmitter<any>;
    /**
     * Event fired when drag ends
     */
    onDragEnd: EventEmitter<any>;
    /**
     * @private
     * Keeps track of mouse over element that is used to determine drag handles
     */
    mouseOverElement: any;
    /**
     * @private
     * Backing field for the dragEnabled property
     */
    _dragEnabled: boolean;
    /**
     * @private
     * Backing field for the dragImage property
     */
    _dragImage: string;
    /**
     * @private
     * Image element for the dragImage
     */
    dragImageElement: HTMLImageElement;
    constructor(el: ElementRef, ng2SortableService: Ng2SortableService);
    ngOnInit(): void;
    dragStart(e: any): void;
    drag(e: any): void;
    dragenter(e: any): void;
    dragLeave(e: any): void;
    dragEnd(e: any): void;
    mouseover(e: any): void;
    private allowDrag();
    private applyDragHandleClass();
    private getDragHandleElement();
}
